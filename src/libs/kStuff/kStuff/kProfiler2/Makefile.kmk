# $Id: Makefile.kmk 2 2007-11-16 16:07:14Z bird $
## @file
# kProfiler Mark 2, sub-makefile.
#

#
# Copyright (c) 2006-2007 knut st. osmundsen <bird-src-spam@anduin.net>
#
# This file is part of kProfiler.
#
# kProfiler is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# kProfiler is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with kProfiler; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
#


DEPTH ?= ../..
SUB_DEPTH = ..
include $(PATH_KBUILD)/subheader.kmk

#LIBRARIES  += kPrf2GC kPrf2R0
DLLS       += kPrf2
PROGRAMS   += kPrf2Read


#
# Our template.
#
TEMPLATE_kPrf2 = kProfiler Template
TEMPLATE_kPrf2_TOOL             = GCC3
TEMPLATE_kPrf2_TOOL.os2         = GCC3OMF
TEMPLATE_kPrf2_TOOL.win.x86     = VCC70
TEMPLATE_kPrf2_TOOL.win.amd64   = VCC80AMD64
TEMPLATE_kPrf2_ASTOOL           = YASM
TEMPLATE_kPrf2_ASTOOL.os2       = NASM

TEMPLATE_kPrf2_SDKS.win         = WINPSDK

TEMPLATE_kPrf2_DEFS.freebsd     = KPRF_OS_FREEBSD
TEMPLATE_kPrf2_DEFS.linux       = KPRF_OS_LINUX
TEMPLATE_kPrf2_DEFS.os2         = KPRF_OS_OS2
TEMPLATE_kPrf2_DEFS.win         = KPRF_OS_WINDOWS

TEMPLATE_kPrf2_CXXFLAGS.freebsd = -g
TEMPLATE_kPrf2_CXXFLAGS.linux   = -g
TEMPLATE_kPrf2_CXXFLAGS.os2     = -g
TEMPLATE_kPrf2_CXXFLAGS.win     = -Zi -Zl -MD -W3 -GF -GR-
TEMPLATE_kPrf2_CXXFLAGS.win.amd64 = -GS- #-FAcs
ifneq ($(BUILD_TYPE),debug)
TEMPLATE_kPrf2_CXXFLAGS.freebsd+= -O3
TEMPLATE_kPrf2_CXXFLAGS.linux  += -O3
TEMPLATE_kPrf2_CXXFLAGS.os2    += -O3
TEMPLATE_kPrf2_CXXFLAGS.win    += -O2xtg -Oi -Ob2
endif

TEMPLATE_kPrf2_ASFLAGS.freebsd  = -f elf
TEMPLATE_kPrf2_ASFLAGS.linux    = -f elf
TEMPLATE_kPrf2_ASFLAGS.os2      = -f omf
TEMPLATE_kPrf2_ASFLAGS.win.x86  = -f win32 -g cv8
TEMPLATE_kPrf2_ASFLAGS.win.amd64 = -f win64 -g cv8

TEMPLATE_kPrf2_INCS             = \
	../include

TEMPLATE_kPrf2_LDFLAGS.freebsd  = -g
TEMPLATE_kPrf2_LDFLAGS.linux    = -g
TEMPLATE_kPrf2_LDFLAGS.os2      = -g
TEMPLATE_kPrf2_LDFLAGS.win      = /DEBUG

TEMPLATE_kPrf2_LIBS.freebsd     =
TEMPLATE_kPrf2_LIBS.linux       =
TEMPLATE_kPrf2_LIBS.os2         =
TEMPLATE_kPrf2_LIBS.win        = \
	$(PATH_SDK_WINPSDK_LIB)/psapi.Lib
TEMPLATE_kPrf2_LIBS.win.x86     = \
	$(PATH_TOOL_VCC70_LIB)/msvcrt.lib \
	$(PATH_TOOL_VCC70_LIB)/msvcprt.lib \
	$(PATH_TOOL_VCC70_LIB)/oldnames.lib


#
# kPrf2 - The profiler module.
#
kPrf2_TEMPLATE      = kPrf2
kPrf2_DEFS.x86      = KPRF_BITS=32
kPrf2_DEFS.amd64    = KPRF_BITS=64
kPrf2_LDFLAGS.win.amd64 = -Entry:DllMain

kPrf2_SOURCES       = \
	kProfileR3.cpp
#	kProfileGC.cpp
#	kProfileR0.cpp

kPrf2_SOURCES.win = \
	dllmain-win.cpp \
	prf$(BUILD_TARGET_ARCH)msc.asm \
	kPrf2-win-$(BUILD_TARGET_ARCH).def
prfx86msc.asm_DEFS.win.x86 = \
	KPRF_ENTER=_KPrfEnter \
	KPRF_LEAVE=_KPrfLeave
prfamd64msc.asm_DEFS.win.amd64 = \
	KPRF_ENTER=KPrfEnter \
	KPRF_LEAVE=KPrfLeave

#
# kPrf2Read - The read & producer of statistics.
#
#kPrf2Read_TEMPLATE = kPrf2
kPrf2Read_TEMPLATE = kStuffEXE
kPrf2Read_SOURCES  = \
	kPrf2Read.cpp
kPrf2Read_LIBS  = \
	$(PATH_LIB)/kDbgStatic$(SUFF_LIB) \
	$(PATH_LIB)/kRdrStatic$(SUFF_LIB) \
	$(PATH_LIB)/kHlpCRTStatic$(SUFF_LIB)


#
# A simple testcase.
#
PROGRAMS.win.x86 += tst
tst_TOOL = VCC70
tst_SDKS = WINPSDK
tst_CFLAGS = -GH -Gh -Zi -Zl -GR- -GX- -GF- -MD -W3 -wd4244
tst_SOURCES = tst.c
tst.c_CFLAGS = -Od
tst_LDFLAGS = /DEBUG
tst_LIBS = \
	$(PATH_TOOL_VCC70_LIB)/msvcrt.lib \
	$(PATH_TOOL_VCC70_LIB)/msvcprt.lib \
	$(PATH_TOOL_VCC70_LIB)/oldnames.lib \
	$(PATH_kPrf2)/kPrf2.lib

PROGRAMS += tstlongjmp
tstlongjmp_TEMPLATE = kStuffEXE
tstlongjmp_CFLAGS.win = -GH -Gh -Zi
tstlongjmp_SOURCES = tstlongjmp.c
tstlongjmp_LIBS = \
	$(PATH_kPrf2)/kPrf2.lib

# Generate the rules
include $(PATH_KBUILD)/subfooter.kmk


#
# Aliases for .cpp.h files so we can more easily do syntax checking from the editor.
#
CORE := $(wildcard *core*.cpp.h *core*.h.h)
$(CORE:.h=.o) $(CORE:.h=.obj) : kProfileR3.o

READ := $(wildcard *read*.cpp.h *read*.h.h)
$(READ:.h=.o) $(READ:.h=.obj) : kPrf2Read.o

